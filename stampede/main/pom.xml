<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.torodb.stampede</groupId>
        <artifactId>stampede-pom</artifactId>
        <version>1.0.0-beta2-SNAPSHOT</version>
    </parent>

    <artifactId>stampede-main</artifactId>

    <name>ToroDB: Stampede main</name>
    <description>ToroDB stampede main project. Contains executable class and CLI parsing.</description>

    <properties>
        <profiles.resources>src/main/profiles/dev</profiles.resources>
        <assembler.mainClass>com.torodb.stampede.Main</assembler.mainClass>
        <assembler.name>torodb-stampede</assembler.name>
        <assembler.fullName>ToroDB Stampede</assembler.fullName>
        <assembler.url>https://www.torodb.com/stampede</assembler.url>
        <assembler.revision>1</assembler.revision>
        <assembler.licenses>AGPLv3</assembler.licenses>
        <assembler.changelog></assembler.changelog>
        <snap.grade>devel</snap.grade>
        <snap.confinement>devmode</snap.confinement>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.torodb.engine</groupId>
            <artifactId>packaging-utils</artifactId>
            <version>${torodb.engine.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>stampede-service</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>annotations</artifactId>
        </dependency>
        <dependency>
            <groupId>com.torodb.engine</groupId>
            <artifactId>essential</artifactId>
            <version>${torodb.engine.version}</version>
        </dependency>
        
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>integration-tests</id>
                            <phase>integration-test</phase>
                            <configuration>
                                <systemProperties>
                                    <torodbIntegrationConfigYml>${torodbIntegrationConfigYml}</torodbIntegrationConfigYml>
                                </systemProperties>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>dist-copy-dependencies</id>
                            <phase>prepare-package</phase>
                            <goals>
                                <goal>copy-dependencies</goal>
                            </goals>
                            <configuration>
                                <outputDirectory>${project.build.directory}/dist/lib</outputDirectory>
                                <includeScope>runtime</includeScope>
                                <overWriteReleases>false</overWriteReleases>
                                <overWriteSnapshots>false</overWriteSnapshots>
                                <overWriteIfNewer>true</overWriteIfNewer>
                                <useRepositoryLayout>true</useRepositoryLayout>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>dist-copy-resources</id>
                            <phase>prepare-package</phase>
                            <goals>
                                <goal>copy-resources</goal>
                            </goals>
                            <configuration>
                                <outputDirectory>${basedir}/target/dist/</outputDirectory>
                                <resources>
                                    <resource>
                                        <directory>src/main/dist</directory>
                                        <filtering>true</filtering>
                                    </resource>
                                </resources>
                                <overwrite>true</overwrite>
                                <delimiters>
                                    <delimiter>@{*}</delimiter>
                                </delimiters>
                                <useDefaultDelimiters>false</useDefaultDelimiters>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>dist-main-jar</id>
                            <phase>package</phase>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                            <configuration>
                                <outputDirectory>${basedir}/target/dist/lib/</outputDirectory>
                                <finalName>${assembler.name}-${project.version}</finalName>
                                <archive>
                                    <manifest>
                                        <addClasspath>true</addClasspath>
                                        <classpathMavenRepositoryLayout>true</classpathMavenRepositoryLayout>
                                        <useUniqueVersions>false</useUniqueVersions>
                                        <classpathPrefix>./</classpathPrefix>
                                        <mainClass>${mainClass}</mainClass>
                                    </manifest>
                                </archive>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>${profiles.resources}</directory>
            </resource>
        </resources>
    </build>
    
    <profiles>
        <profile>
            <id>assembler</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>dist-copy-dependencies</id>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>dist-copy-resources</id>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jar-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>dist-main-jar</id>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>assembler</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                                <configuration>
                                    <descriptors>
                                        <descriptor>src/main/assembly/assembly.xml</descriptor>
                                    </descriptors>
                                    <finalName>torodb-stampede-${project.version}</finalName>
                                    <outputDirectory>${project.build.directory}/dist</outputDirectory>
                                    <tarLongFileMode>gnu</tarLongFileMode>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
                <finalName>${project.name}-${project.version}</finalName>
            </build>
        </profile>
        
        <profile>
            <id>docker</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>dist-copy-dependencies</id>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>dist-copy-resources</id>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jar-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>dist-main-jar</id>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <extensions>true</extensions>
                        <configuration>
                            <images>
                                <image>
                                    <alias>torodb-stampede</alias>
                                    <name>torodb/stampede:%v</name>
                                    <build>
                                        <from>torodb/base:latest</from>
                                        <tags>
                                            <tag>${project.version}</tag>
                                            <tag>latest</tag>
                                        </tags>
                                        <assembly>
                                            <mode>dir</mode>
                                            <descriptor>assembly.xml</descriptor>
                                        </assembly>
                                        <env>
                                            <PATH>/maven/bin:$PATH</PATH>
                                        </env>
                                        <runCmds>
                                            <run>useradd -d /maven torodb</run>
                                            <run>chown torodb /maven -R</run>
                                        </runCmds>
                                        <entryPoint>
                                            <exec>
                                                <arg>/maven/bin/entry-point</arg>
                                            </exec>
                                        </entryPoint>
                                        <cmd>
                                            <arg>torodb-stampede</arg>
                                        </cmd>
                                    </build>
                                </image>
                            </images>
                        </configuration>
                        <executions>
                            <execution>
                                <id>docker-build</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <profile>
            <id>snap</id>
            <properties>
                <package.name>${assembler.name}</package.name>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>dist-copy-dependencies</id>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>dist-copy-resources</id>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jar-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>dist-main-jar</id>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>assembler-snap</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                                <configuration>
                                    <descriptors>
                                        <descriptor>src/main/snap/assembly.xml</descriptor>
                                    </descriptors>
                                    <finalName>assembler</finalName>
                                    <outputDirectory>${project.build.directory}/dist/snap/${package.name}</outputDirectory>
                                    <tarLongFileMode>gnu</tarLongFileMode>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>1.5.0</version>
                        <executions>
                            <execution>
                                <id>snapcraft-clean</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <workingDirectory>${project.build.directory}/dist/snap/${package.name}</workingDirectory>
                                    <executable>snapcraft</executable>
                                    <arguments>
                                        <argument>clean</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>snapcraft-build</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <workingDirectory>${project.build.directory}/dist/snap/${package.name}</workingDirectory>
                                    <executable>snapcraft</executable>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <profile>
            <id>rpm</id>
            <properties>
                <package.name>${assembler.name}</package.name>
                <rpmbuilder.image>fedora:25</rpmbuilder.image>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <version>1.7</version>
                        <executions>
                            <execution>
                                <id>assembler-version-property</id>
                                <goals>
                                    <goal>regex-property</goal>
                                </goals>
                                <configuration>
                                    <name>assembler.version</name>
                                    <value>${project.version}</value>
                                    <regex>-</regex>
                                    <replacement>_</replacement>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>dist-copy-dependencies</id>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>dist-copy-resources</id>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jar-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>dist-main-jar</id>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>assembler-rpm</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                                <configuration>
                                    <descriptors>
                                        <descriptor>src/main/rpm/assembly.xml</descriptor>
                                    </descriptors>
                                    <finalName>assembler</finalName>
                                    <outputDirectory>${project.build.directory}/dist/rpm/${package.name}</outputDirectory>
                                    <tarLongFileMode>gnu</tarLongFileMode>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <extensions>true</extensions>
                        <configuration>
                            <images>
                                <image>
                                    <alias>rpmbuilder</alias>
                                    <name>rpmbuilder</name>
                                    <build>
                                        <cleanup>remove</cleanup>
                                        <optimise>true</optimise>
                                        <from>${rpmbuilder.image}</from>
                                        <runCmds>
                                            <run>dnf -y install rpmdevtools rpmlint copr-cli help2man java-1.8.0-openjdk-headless postgresql</run>
                                            <run>rpmdev-setuptree</run>
                                        </runCmds>
                                    </build>
                                    <run>
                                        <volumes>
                                            <bind>
                                                <volume>${basedir}/target/dist/rpm/${package.name}:/rpm</volume>
                                            </bind>
                                        </volumes>
                                        <env>
                                            <SPEC_FILE>/rpm/${package.name}.spec</SPEC_FILE>
                                        </env>
                                        <wait>
                                            <time>600000</time>
                                            <log>rpmbuilder finished</log>
                                        </wait>
                                        <cmd>
                                            <arg>/bin/sh</arg>
                                            <arg>-c</arg>
                                            <arg>
                                            set -x -v -e;
                                            cp -a /rpm/* "$HOME/rpmbuild/SOURCES";
                                            rm -Rf "$HOME/rpmbuild/SOURCES/rpmbuild";
                                            spectool -g -R "$SPEC_FILE";
                                            dnf -y builddep "$SPEC_FILE";
                                            rpmbuild -ba "$SPEC_FILE";
                                            cp -a "$HOME/rpmbuild" "/rpm/.";
                                            chmod a+w /rpm -R;
                                            echo "rpmbuilder finished";
                                            </arg>
                                        </cmd>
                                    </run>
                                </image>
                            </images>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <profile>
            <id>deb</id>
            <properties>
                <package.name>${assembler.name}</package.name>
                <debbuilder.image>debian:8</debbuilder.image>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <version>1.7</version>
                        <executions>
                            <execution>
                                <id>assembler-version-property</id>
                                <goals>
                                    <goal>regex-property</goal>
                                </goals>
                                <configuration>
                                    <name>assembler.version</name>
                                    <value>${project.version}</value>
                                    <regex>-</regex>
                                    <replacement>_</replacement>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>dist-copy-dependencies</id>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>dist-copy-resources</id>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jar-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>dist-main-jar</id>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>assembler-deb</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                                <configuration>
                                    <descriptors>
                                        <descriptor>src/main/deb/assembly.xml</descriptor>
                                    </descriptors>
                                    <finalName>build.orig</finalName>
                                    <outputDirectory>${project.build.directory}/dist/deb/${package.name}</outputDirectory>
                                    <tarLongFileMode>gnu</tarLongFileMode>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <extensions>true</extensions>
                        <configuration>
                            <images>
                                <image>
                                    <alias>debbuilder</alias>
                                    <name>debbuilder</name>
                                    <build>
                                        <cleanup>none</cleanup>
                                        <optimise>false</optimise>
                                        <from>${debbuilder.image}</from>
                                        <runCmds>
                                            <run>echo "deb http://ftp.de.debian.org/debian jessie-backports main" &gt;&gt; /etc/apt/sources.list</run>
                                            <run>apt update</run>
                                            <run>apt -y install devscripts build-essential lintian help2man openjdk-8-jdk-headless postgresql-client</run>
                                        </runCmds>
                                    </build>
                                    <run>
                                        <volumes>
                                            <bind>
                                                <volume>${basedir}/target/dist/deb/${package.name}:/deb</volume>
                                            </bind>
                                        </volumes>
                                        <wait>
                                            <time>600000</time>
                                            <log>debbuilder finished</log>
                                        </wait>
                                        <cmd>
                                            <arg>/bin/sh</arg>
                                            <arg>-c</arg>
                                            <arg>
                                            set -x -v -e;
                                            mkdir "$HOME/debbuild";
                                            cp -a /deb/* "$HOME/debbuild";
                                            rm -Rf "$HOME/debbuild/debbuild";
                                            find . -name "*.DS_Store" -type f -delete
                                            mkdir "$HOME/data";
                                            cp -a $HOME/debbuild/build.orig/build.orig/* "$HOME/data";
                                            cd "$HOME/debbuild/build";
                                            debuild -us -uc;
                                            cp -a "$HOME/debbuild" "/deb/.";
                                            chmod a+w /deb -R;
                                            echo "debbuilder finished";
                                            </arg>
                                        </cmd>
                                    </run>
                                </image>
                            </images>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        
        <profile>
            <id>docker-stampede</id>
            <properties>
                <docker.postgres.host></docker.postgres.host>
                <docker.postgres.port>5432</docker.postgres.port>
                <docker.postgres.password></docker.postgres.password>
                <docker.torodb.setup>false</docker.torodb.setup>
                <docker.torodb.backend.user>torodb</docker.torodb.backend.user>
                <docker.torodb.backend.password>torodb</docker.torodb.backend.password>
                <docker.mongo.syncsource></docker.mongo.syncsource>
                <docker.debug>false</docker.debug>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <extensions>true</extensions>
                        <configuration>
                            <images>
                                <image>
                                    <name>torodb/stampede</name>
                                    <run>
                                        <env>
                                            <POSTGRES_PASSWORD>${docker.postgres.password}</POSTGRES_PASSWORD>
                                            <TORODB_SETUP>${docker.torodb.setup}</TORODB_SETUP>
                                            <TORODB_SYNC_SOURCE>${docker.mongo.syncsource}</TORODB_SYNC_SOURCE>
                                            <TORODB_BACKEND_HOST>${docker.postgres.host}</TORODB_BACKEND_HOST>
                                            <TORODB_BACKEND_PORT>${docker.postgres.port}</TORODB_BACKEND_PORT>
                                            <TORODB_BACKEND_DATABASE>${docker.postgres.database}</TORODB_BACKEND_DATABASE>
                                            <TORODB_BACKEND_USER>${docker.torodb.backend.user}</TORODB_BACKEND_USER>
                                            <TORODB_BACKEND_PASSWORD>${docker.torodb.backend.password}</TORODB_BACKEND_PASSWORD>
                                            <DEBUG>${docker.debug}</DEBUG>
                                        </env>
                                        <log>
                                            <prefix>torodb</prefix>
                                            <enabled>true</enabled>
                                            <color>white</color>
                                        </log>
                                    </run>
                                </image>
                            </images>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <profile>
            <id>docker-stampede-postgres</id>
            <properties>
                <docker.postgres.password>postgres</docker.postgres.password>
                <docker.torodb.backend.password>torodb</docker.torodb.backend.password>
                <docker.mongo.syncsource></docker.mongo.syncsource>
                <docker.debug>false</docker.debug>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <extensions>true</extensions>
                        <configuration>
                            <images>
                                <image>
                                    <name>torodb/stampede</name>
                                    <run>
                                        <env>
                                            <POSTGRES_PASSWORD>${docker.postgres.password}</POSTGRES_PASSWORD>
                                            <TORODB_SETUP>true</TORODB_SETUP>
                                            <TORODB_SYNC_SOURCE>${docker.mongo.syncsource}</TORODB_SYNC_SOURCE>
                                            <TORODB_BACKEND_HOST>postgres</TORODB_BACKEND_HOST>
                                            <TORODB_BACKEND_PORT>5432</TORODB_BACKEND_PORT>
                                            <TORODB_BACKEND_DATABASE>torod</TORODB_BACKEND_DATABASE>
                                            <TORODB_BACKEND_USER>torodb</TORODB_BACKEND_USER>
                                            <TORODB_BACKEND_PASSWORD>${docker.torodb.backend.password}</TORODB_BACKEND_PASSWORD>
                                            <DEBUG>${docker.debug}</DEBUG>
                                        </env>
                                        <links>
                                            <link>postgres:postgres</link>
                                        </links>
                                        <log>
                                            <prefix>torodb</prefix>
                                            <enabled>true</enabled>
                                            <color>white</color>
                                        </log>
                                    </run>
                                </image>
                                <image>
                                    <alias>postgres</alias>
                                    <name>postgres:9.6</name>
                                    <run>
                                        <env>
                                            <POSTGRES_PASSWORD>${docker.postgres.password}</POSTGRES_PASSWORD>
                                        </env>
                                        <ports>
                                            <port>15432:5432</port>
                                        </ports>
                                        <log>
                                            <prefix>postgres</prefix>
                                            <enabled>true</enabled>
                                            <color>blue</color>
                                        </log>
                                    </run>
                                </image>
                            </images>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <profile>
            <id>docker-stampede-fullstack</id>
            <properties>
                <docker.postgres.password>postgres</docker.postgres.password>
                <docker.torodb.backend.password>torodb</docker.torodb.backend.password>
                <docker.debug>false</docker.debug>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <extensions>true</extensions>
                        <configuration>
                            <images>
                                <image>
                                    <alias>mongodb</alias>
                                    <name>mongo:3.2</name>
                                    <run>
                                        <hostname>mongodb</hostname>
                                        <ports>
                                            <port>28017:27017</port>
                                        </ports>
                                        <log>
                                            <prefix>mongodb</prefix>
                                            <enabled>true</enabled>
                                            <color>green</color>
                                        </log>
                                        <volumes>
                                            <bind>
                                                <volume>${project.basedir}/src/main/dist/docker:/util</volume>
                                            </bind>
                                        </volumes>
                                        <extraHosts>
                                            <extraHost>mongodb:127.0.0.1</extraHost>
                                        </extraHosts>
                                        <entrypoint>
                                            <arg>/bin/bash</arg>
                                            <arg>/util/initiate-mongo-rs</arg>
                                        </entrypoint>
                                    </run>
                                </image>
                                <image>
                                    <alias>postgres</alias>
                                    <name>postgres:9.6</name>
                                    <run>
                                        <env>
                                            <POSTGRES_PASSWORD>${docker.postgres.password}</POSTGRES_PASSWORD>
                                        </env>
                                        <ports>
                                            <port>15432:5432</port>
                                        </ports>
                                        <log>
                                            <prefix>postgres</prefix>
                                            <enabled>true</enabled>
                                            <color>blue</color>
                                        </log>
                                    </run>
                                </image>
                                <image>
                                    <name>torodb/stampede</name>
                                    <run>
                                        <env>
                                            <POSTGRES_PASSWORD>${docker.postgres.password}</POSTGRES_PASSWORD>
                                            <TORODB_SETUP>true</TORODB_SETUP>
                                            <TORODB_SYNC_SOURCE>mongodb:27017</TORODB_SYNC_SOURCE>
                                            <TORODB_BACKEND_HOST>postgres</TORODB_BACKEND_HOST>
                                            <TORODB_BACKEND_PORT>5432</TORODB_BACKEND_PORT>
                                            <TORODB_BACKEND_DATABASE>torod</TORODB_BACKEND_DATABASE>
                                            <TORODB_BACKEND_USER>torodb</TORODB_BACKEND_USER>
                                            <TORODB_BACKEND_PASSWORD>${docker.torodb.backend.password}</TORODB_BACKEND_PASSWORD>
                                            <DEBUG>${docker.debug}</DEBUG>
                                        </env>
                                        <links>
                                            <link>postgres:postgres</link>
                                            <link>mongodb:mongodb</link>
                                        </links>
                                        <log>
                                            <prefix>torodb</prefix>
                                            <enabled>true</enabled>
                                            <color>white</color>
                                        </log>
                                    </run>
                                </image>
                            </images>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>prod</id>
            <properties>
                <profiles.resources>src/main/profiles/prod</profiles.resources>
                <snap.grade>stable</snap.grade>
                <snap.confinement>strict</snap.confinement>
            </properties>
        </profile>

    </profiles>

</project>
